
    Пусть G=(V,E) — направленный граф, где V — множество вершин, а E — множество рёбер.
    Пусть w(u,v) — вес ребра от вершины u к вершине v.
    Пусть s — начальная вершина, из которой мы ищем кратчайшие пути.
    Пусть d(v) — кратчайшее расстояние от s до вершины v.

Основные шаги доказательства:

    Инициализация: В начале алгоритма мы инициализируем расстояния до всех вершин как бесконечность, кроме начальной
    вершины s, для которой расстояние равно 0: d(s)=0 и d(v)=∞ для всех v∈ V∖{s}.

    Свойство кратчайшего пути: Алгоритм Дейкстры работает, выбирая вершину u с минимальным расстоянием d(u) из множества
    непосещённых вершин. Мы утверждаем, что на момент выбора вершины u расстояние d(u) является кратчайшим расстоянием
    от s до u.

    Индукция по количеству посещённых вершин: База индукции: В начале алгоритма, когда посещена только вершина s,
    расстояние до неё d(s)=0 является верным. Шаг индукции: Предположим, что для некоторого количества посещённых вершин
    это свойство верно. Теперь, когда мы выбираем следующую вершину u с минимальным расстоянием, мы должны показать, что
    d(u) также является кратчайшим расстоянием от s до u.

    Доказательство шага индукции: Пусть P — кратчайший путь от s до u. Если бы d(u) не было кратчайшим расстоянием, то
    существовал бы путь P′ с меньшей длиной, который не проходил через u. Однако, поскольку мы выбираем вершину с
    минимальным расстоянием, это противоречит предположению, что d(u) — минимальное расстояние.

    Обновление расстояний: После выбора вершины u мы обновляем расстояния до соседних вершин v (где (u,v)∈ E). Если
    d(u)+w(u,v)<d(v), то мы обновляем d(v). Это также сохраняет свойство кратчайшего пути, так как мы всегда выбираем
    минимальное расстояние.

    Завершение алгоритма: Алгоритм завершает свою работу, когда все вершины посещены. На этом этапе для каждой вершины v
    расстояние d(v) будет равно кратчайшему расстоянию от s до v.

